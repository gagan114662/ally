name: CI
on:
  push: { branches: [ main ] }
  pull_request: { branches: [ main ] }
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.11', cache: 'pip' }
      - name: Install
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
      - name: Pytest
        run: pytest -q --maxfail=1 --disable-warnings --cov=ally --cov-report=xml
      - name: Verify claims (optional)
        run: |
          python - <<'PY'
          import importlib.util, subprocess, sys
          if importlib.util.find_spec("ally.verify.verify_claims"):
              sys.exit(subprocess.call([sys.executable,"-m","ally.verify.verify_claims"]))
          print("No verification pack; skipping.")
          PY
      - name: Upload traces on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with: { name: traces, path: runs/_traces/** }
      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with: { name: coverage-xml, path: coverage.xml }

  milestone-9:
    runs-on: ubuntu-latest
    env:
      MPLBACKEND: Agg
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.11', cache: 'pip' }
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
      
      - name: Run M9 orchestrator tests
        run: |
          pytest tests/test_orchestrator_e2e.py -v --tb=short
      
      - name: Generate M9 proof bundle
        if: always()
        run: |
          mkdir -p ci_artifacts
          
          echo "# MILESTONE 9 (Orchestrator Integration) - PROOF BUNDLE" > ci_artifacts/m9_proof.md
          echo "Generated: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> ci_artifacts/m9_proof.md
          echo "Commit: $GITHUB_SHA" >> ci_artifacts/m9_proof.md
          echo "" >> ci_artifacts/m9_proof.md
          
          echo "## Test Results" >> ci_artifacts/m9_proof.md
          if pytest tests/test_orchestrator_e2e.py::test_orch_001_basic_pipeline_execution -v --tb=no; then
            echo "‚úÖ ORCH-001: Basic Pipeline Execution - PASS" >> ci_artifacts/m9_proof.md
          else
            echo "‚ùå ORCH-001: Basic Pipeline Execution - FAIL" >> ci_artifacts/m9_proof.md
          fi
          
          if pytest tests/test_orchestrator_e2e.py::test_orch_002_memory_integration_verification -v --tb=no; then
            echo "‚úÖ ORCH-002: Memory Integration Verification - PASS" >> ci_artifacts/m9_proof.md
          else
            echo "‚ùå ORCH-002: Memory Integration Verification - FAIL" >> ci_artifacts/m9_proof.md
          fi
          
          if pytest tests/test_orchestrator_e2e.py::test_orch_003_deterministic_behavior_validation -v --tb=no; then
            echo "‚úÖ ORCH-003: Deterministic Behavior Validation - PASS" >> ci_artifacts/m9_proof.md
          else
            echo "‚ùå ORCH-003: Deterministic Behavior Validation - FAIL" >> ci_artifacts/m9_proof.md
          fi
          
          if pytest tests/test_orchestrator_e2e.py::test_orch_schema_validation -v --tb=no; then
            echo "‚úÖ ORCH-SCHEMA: Schema Validation - PASS" >> ci_artifacts/m9_proof.md
          else
            echo "‚ùå ORCH-SCHEMA: Schema Validation - FAIL" >> ci_artifacts/m9_proof.md
          fi
          
          echo "" >> ci_artifacts/m9_proof.md
          echo "## Implementation Files" >> ci_artifacts/m9_proof.md
          echo "- ally/schemas/orch.py ‚úì" >> ci_artifacts/m9_proof.md
          echo "- ally/orchestrator/run.py ‚úì" >> ci_artifacts/m9_proof.md  
          echo "- ally/tools/orchestrator.py ‚úì" >> ci_artifacts/m9_proof.md
          echo "- ally/verify/jsonschema/orch_summary.schema.json ‚úì" >> ci_artifacts/m9_proof.md
          echo "- tests/test_orchestrator_e2e.py ‚úì" >> ci_artifacts/m9_proof.md
          
          # Verify tool registration
          echo "" >> ci_artifacts/m9_proof.md
          echo "## Tool Registration Check" >> ci_artifacts/m9_proof.md
          if python -c "from ally.tools import TOOL_REGISTRY; assert 'orchestrator.run' in TOOL_REGISTRY; print('orchestrator.run tool registered successfully')"; then
            echo "‚úÖ orchestrator.run tool registered in TOOL_REGISTRY" >> ci_artifacts/m9_proof.md
          else
            echo "‚ùå orchestrator.run tool NOT registered in TOOL_REGISTRY" >> ci_artifacts/m9_proof.md
          fi
          
      - name: Comment PROOF lines to PR
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            // Read proof bundle
            let proofContent = '';
            try {
              proofContent = fs.readFileSync('ci_artifacts/m9_proof.md', 'utf8');
            } catch (err) {
              console.log('No proof bundle found, generating basic comment');
              proofContent = 'M9 orchestrator tests completed.';
            }
            
            // Extract PROOF lines
            const proofLines = proofContent.split('\n').filter(line => 
              line.includes('‚úÖ') || line.includes('‚ùå') || 
              line.includes('PASS') || line.includes('FAIL')
            );
            
            const comment = `## ü§ñ M9 Orchestrator Integration - CI Results
            
            ${proofLines.join('\n')}
            
            <details>
            <summary>Full Proof Bundle</summary>
            
            \`\`\`
            ${proofContent}
            \`\`\`
            </details>
            
            *Generated by GitHub Actions CI*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
      
      - name: Upload M9 artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: m9-proof-bundle
          path: ci_artifacts/