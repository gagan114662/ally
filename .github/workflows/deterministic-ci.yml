name: deterministic-ci

on:
  push:
    branches: [ main, 'release/**', 'phase-*', 'chore/**', 'feat/**' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: write
  actions: read
  checks: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ALLY_LIVE: "0"
      TZ: "UTC"
      PYTHONHASHSEED: "0"
      OMP_NUM_THREADS: "1"
      OPENBLAS_NUM_THREADS: "1"
      MKL_NUM_THREADS: "1"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Normalize line endings (avoid CRLF script breaks)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y dos2unix
          find . -type f -name "*.sh" -print0 | xargs -0 -I{} dos2unix "{}" || true

      - name: Make scripts executable
        run: |
          chmod +x scripts/*.sh || true
          chmod +x scripts/**/*.sh || true

      - name: Install minimal deps (no network tests; keep it tiny)
        run: |
          python -m pip install --upgrade pip
          # Core testing dependencies
          pip install pytest pytest-cov coverage pyyaml || true

      - name: Run deterministic mini battery
        shell: bash
        run: |
          set -euo pipefail
          bash scripts/ci_deterministic_min.sh

      - name: Validate required artifacts
        run: |
          test -s artifacts/audit_check_ci.json
          test -s artifacts/chat/transcript_ci.jsonl
          echo "Artifacts present and non-empty."

      - name: Upload CI artifacts
        uses: actions/upload-artifact@v4
        with:
          name: deterministic-artifacts
          path: |
            artifacts/audit_check_ci.json
            artifacts/chat/transcript_ci.jsonl
            artifacts/ci/**

      - name: Sticky PROOF comment
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = 'artifacts/audit_check_ci.json';
            let summary = '';
            try {
              const data = JSON.parse(fs.readFileSync(path, 'utf8'));
              summary = `missing=${data.missing ?? 'n/a'}, mismatches=${data.mismatches ?? 'n/a'}, ok=${data.ok ?? 'n/a'}`;
            } catch (e) {
              summary = 'could not read audit_check_ci.json';
            }
            const proof = `PROOF:run:chatgpt.verify@${process.env.GITHUB_SHA.slice(0,8)}:${(new Date()).toISOString().slice(11,19).replace(/:/g,'')}`;
            const body = [
              '## ðŸ¤– ChatGPT Audit',
              '',
              `- ${proof}`,
              `- ${summary}`,
              '- Artifacts: `artifacts/audit_check_ci.json`, `artifacts/chat/transcript_ci.jsonl`'
            ].join('\n');
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });